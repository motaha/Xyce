//-----------------------------------------------------------------------------
// Copyright Notice
//
//   Copyright 2002 Sandia Corporation. Under the terms
//   of Contract DE-AC04-94AL85000 with Sandia Corporation, the U.S.
//   Government retains certain rights in this software.
//
//    Xyce(TM) Parallel Electrical Simulator
//    Copyright (C) 2002-2014 Sandia Corporation
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Filename       : $RCSfile: N_DEV_DeviceState.h,v $
//
// Purpose        : Used to store internal state info for devices
//                  To be used for restarts and migrations
// Special Notes  :
//
// Creator        : Robert Hoekstra, SNL, Parallel Computational Sciences
//
// Creation Date  : 09/02/01
//
// Revision Information:
// ---------------------
//
// Revision Number: $Revision: 1.14.2.1 $
//
// Revision Date  : $Date: 2014/02/26 20:16:30 $
//
// Current Owner  : $Author: tvrusso $
//-----------------------------------------------------------------------------

#ifndef Xyce_N_DEV_DeviceState_h
#define Xyce_N_DEV_DeviceState_h

#include <string>
#include <vector>
#include <iosfwd>

#include <N_DEV_fwd.h>

#include <N_UTL_Packable.h>

namespace Xyce {
namespace Device {

//-----------------------------------------------------------------------------
// Class         : DeviceState
// Purpose       :
// Special Notes :
// Creator       : Robert Hoektra, SNL, Parallel Computational Sciences
// Creation Date : 09/02/01
//-----------------------------------------------------------------------------
class DeviceState : public Packable
{

public:
  DeviceState( const std::string & id = "" )
    : ID(id)
  {}

  ~DeviceState() {}

  //autogenerated copy and assignment for now

  bool operator==(const DeviceState & right) const
  { return ID == right.ID; }
  bool operator!=(const DeviceState & right) const
  { return ID != right.ID; }

  //Packing Utils
  Packable * instance() const { return new DeviceState(); }
  int packedByteCount() const;

  void pack( char * buf, int bsize, int & pos, N_PDS_Comm * comm ) const;
  void unpack( char * buf, int bsize, int & pos, N_PDS_Comm * comm );

  void dump( std::ostream & os );
  void restore( std::istream & is );

  std::string ID;
  std::vector<double> data;
  std::vector<int> dataInt;
  std::vector<size_t> dataSizeT;

  friend std::ostream& operator<<(std::ostream& os, const DeviceState & ds );

};

} // namespace Device
} // namespace Xyce

typedef Xyce::Device::DeviceState N_DEV_DeviceState;

#endif
